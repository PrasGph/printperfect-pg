name: Advisory Policy (non-blocking)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  advise:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed files
        id: diff
        run: |
          base="${{ github.base_ref || 'main' }}"
          git fetch origin "$base" --depth=1
          git diff --name-only origin/"$base"...HEAD > changed.txt
          echo "changed<<EOF" >> $GITHUB_OUTPUT
          cat changed.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Compose advisory message
        id: compose
        run: |
          CHANGED="$(echo "${{ steps.diff.outputs.changed }}" | tr '\n' ' ')"
          MSG="### ℹ️ Advisory checks (non-blocking)\n"
          NEEDS_MSG=false

          # 1) CHANGELOG nudge for code changes
          if echo "$CHANGED" | grep -Eq 
'(src/|sanity/|seed/|package|vite|tsconfig|tailwind|public/)'
;
 then
            if ! echo "$CHANGED" | grep -q 
'^CHANGELOG\.md'
;
 then
              MSG+="- Please update 
`CHANGELOG.md`
 for code changes.\n"; NEEDS_MSG=true
            fi
          fi

          # 2) GROQ guard (nudge)
          if grep -RIn --include=\*.ts\* 
"from 'groq'"
 src 2>/dev/null; then
            MSG+="- Use **plain string** GROQ; remove 
`import 'groq'`
.\n"; NEEDS_MSG=true
          fi

          # 3) Protected UI/schema files touched?
          if echo "$CHANGED" | grep -Eq 
'src/components/(ServicesGrid|Portfolio|Contact)\.tsx|sanity/schemaTypes/|sanity/schema\.ts'
;
 then
            MSG+="- Protected UI/schema files changed. Add 
`UI change approved: YES`
 in PR body if intended.\n"; NEEDS_MSG=true
          fi

          # 4) Agent attribution
          body="$(jq -r 
'.pull_request.body'
 < $GITHUB_EVENT_PATH)"
          if ! echo "$body" | grep -qi 
'^Agent:'
;
 then
            MSG+="- Please add 
`Agent:`
 line in PR body (Lovable | Codex | Gemini | Human).\n"; NEEDS_MSG=true
          fi

          if [ "$NEEDS_MSG" = true ]; then
            echo "msg<<EOF" >> $GITHUB_OUTPUT
            echo -e "$MSG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR (advisory)
        if: ${{ steps.compose.outputs.msg != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const body = `{{steps.compose.outputs.msg}}`;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });