name: Nightly Sanity Check

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm ci

      - name: Run healthcheck
        id: health
        env:
          VITE_SANITY_PROJECT_ID: ${{ secrets.VITE_SANITY_PROJECT_ID }}
          VITE_SANITY_DATASET: ${{ secrets.VITE_SANITY_DATASET }}
        run: node scripts/sanity-healthcheck.mjs

      - name: Open/update issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Sanity data healthcheck failing'
            const body = `Nightly Sanity healthcheck failed.\n\nRepo: ${context.repo.owner}/${context.repo.repo}\nRun: ${context.runId}\n\nPlease investigate content availability for types service/portfolioItem.`
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            })
            const existing = issues.find(i => i.title === title)
            if (existing) {
              await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: existing.number, body })
            } else {
              await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body, labels: ['automated'] })
            }
